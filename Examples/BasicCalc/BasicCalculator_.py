# This is automatically generated code. Do not modify
from peggen.peggen_ import *
PUNC_43 = StringRule("+")
PUNC_45 = StringRule("-")
PUNC_47 = StringRule("/")
PUNC_42 = StringRule("*")
PUNC_94 = StringRule("^")
PUNC_40 = StringRule("(")
PUNC_41 = StringRule(")")
PUNC_37 = StringRule("%")
ROOT = Production(name = "root")
TOKEN = Production(name = "token")
WHITESPACE = Production(name = "whitespace")
PUNCTUATOR = Production(name = "punctuator")
ADD_SUB_EXPRESSION = Production(name = "add_sub_expression")
MUL_DIV_MOD_EXPRESSION = Production(name = "mul_div_mod_expression")
POWER_EXPRESSION = Production(name = "power_expression")
EVALUATED_EXPRESSION = Production(name = "evaluated_expression")
UNARY_EXPRESSION = Production(name = "unary_expression")
UNARY_OPERATOR = Production(name = "unary_operator")
EXPRESSION = Production(name = "expression")
ADD = Production(name = "add")
SUBTRACT = Production(name = "subtract")
DIVIDE = Production(name = "divide")
MULTIPLY = Production(name = "multiply")
POWER = Production(name = "power")
MOD = Production(name = "mod")
NUMBER = Production(name = "number")
INTEGER = Production(name = "integer")
FLOAT = Production(name = "float")

class BasicCalculatorParser(Parser):
    def __init__(self, string, *args, **kwargs):
        super().__init__(string, TOKEN, ROOT, *args, **kwargs)
